<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ctfshow信息泄露系列</title>
      <link href="/2022/11/10/ctfshow%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E7%B3%BB%E5%88%97/"/>
      <url>/2022/11/10/ctfshow%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E7%B3%BB%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h3 id="1-源码泄露"><a href="#1-源码泄露" class="headerlink" title="1.源码泄露"></a>1.源码泄露</h3><p>直接查看源代码即可得到flag</p><h3 id="2-前台绕过"><a href="#2-前台绕过" class="headerlink" title="2.前台绕过"></a>2.前台绕过</h3><p>限制无法查看源代码</p><p>直接在网址前加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">view-source:<br></code></pre></td></tr></table></figure><p>即可查看源代码，获取flag</p><h3 id="3-协议头信息泄露"><a href="#3-协议头信息泄露" class="headerlink" title="3.协议头信息泄露"></a>3.协议头信息泄露</h3><p>使用burp抓包</p><p>返回包发现flag</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102054255.png"></p><h3 id="4-robots后台泄露"><a href="#4-robots后台泄露" class="headerlink" title="4.robots后台泄露"></a>4.robots后台泄露</h3><p>访问robots.txt</p><p>得到信息</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102055949.png"></p><p>访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/flagishere.txt<br></code></pre></td></tr></table></figure><p>获取flag</p><h3 id="5-phps源码泄露"><a href="#5-phps源码泄露" class="headerlink" title="5.phps源码泄露"></a>5.phps源码泄露</h3><p>访问</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">index</span>.phps<br></code></pre></td></tr></table></figure><p>为index的备份文件，获取flag</p><h3 id="6-源码压缩包泄露"><a href="#6-源码压缩包泄露" class="headerlink" title="6.源码压缩包泄露"></a>6.源码压缩包泄露</h3><p>通过扫描</p><p>网站备份文件为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">www.<span class="hljs-built_in">zip</span><br></code></pre></td></tr></table></figure><p>访问进行下载，获取源码以及flag</p><h3 id="7-版本控制泄露源码-1"><a href="#7-版本控制泄露源码-1" class="headerlink" title="7.版本控制泄露源码-1"></a>7.版本控制泄露源码-1</h3><p>本题为&#x2F;.git&#x2F;泄露</p><p>Git是一个可以实现有效控制应用版本的系统,但是在一旦在代码发布的时候,存在不规范的操作及配置就很可能将源代码泄露出去。</p><p>使用目录扫描可以扫描出&#x2F;.git&#x2F;目录，扫描工具推荐dirsearch（kali自带）</p><p>访问&#x2F;.git&#x2F;获取flag</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102055455.png"></p><h3 id="8-版本控制泄露源码-2"><a href="#8-版本控制泄露源码-2" class="headerlink" title="8.版本控制泄露源码-2"></a>8.版本控制泄露源码-2</h3><p>本题为&#x2F;.svn&#x2F;泄露</p><p>访问&#x2F;.svn&#x2F;获取flag</p><h3 id="9-vim临时文件泄露"><a href="#9-vim临时文件泄露" class="headerlink" title="9.vim临时文件泄露"></a>9.vim临时文件泄露</h3><p>说明：</p><p>vim临时文件 vim中的swp即swap文件,在编辑文件时产生,它是隐藏文件,如果原文件名是submit,则它的临时文件 submit.swp</p><p>访问index.php.swp 获取flag</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102055100.png"></p><h3 id="10-cookie泄露"><a href="#10-cookie泄露" class="headerlink" title="10.cookie泄露"></a>10.cookie泄露</h3><p>如题flag存在cookie中</p><p>使用浏览器插件，查看即可</p><p>我这里是谷歌浏览器，插件名为cookie-editor</p><p>也可以进行抓包，方法不唯一</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102055158.png"></p><h3 id="11-域名txt记录泄露"><a href="#11-域名txt记录泄露" class="headerlink" title="11.域名txt记录泄露"></a>11.域名txt记录泄露</h3><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102056667.png"></p><p>没给环境给了域名对域名进行解析</p><p>在线解析网站 <a href="http://dbcha.com/?t=1668067783">http://dbcha.com/?t=1668067783</a></p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102056864.png"></p><h3 id="12-敏感信息公布"><a href="#12-敏感信息公布" class="headerlink" title="12.敏感信息公布"></a>12.敏感信息公布</h3><p>进入网站下拉</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102056574.png"></p><p>访问&#x2F;admin&#x2F;使用该号码进行admin账号登录</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102056694.png"></p><h3 id="13-内部技术文档泄露"><a href="#13-内部技术文档泄露" class="headerlink" title="13.内部技术文档泄露"></a>13.内部技术文档泄露</h3><p>看介绍应该是网站默认密码没改</p><p>下拉找到</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102056114.png"></p><p>点击访问</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102056971.png"></p><p>登录后台获取flag</p><h3 id="14-编辑器配置不当"><a href="#14-编辑器配置不当" class="headerlink" title="14.编辑器配置不当"></a>14.编辑器配置不当</h3><p>使用御剑扫描</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102057595.png"></p><p>扫描出editor直接访问</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102057632.png"></p><p>点击editor编辑器的文件上传功能</p><p>点击文件空间</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/editor/</span>attached<span class="hljs-regexp">/file/</span>var<span class="hljs-regexp">/www/</span>html<span class="hljs-regexp">/nothinghere/</span>fl000g.txt 发现flag文件<br></code></pre></td></tr></table></figure><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102057450.png"></p><h3 id="15-密码逻辑脆弱"><a href="#15-密码逻辑脆弱" class="headerlink" title="15.密码逻辑脆弱"></a>15.密码逻辑脆弱</h3><p>看样子应该是弱口令</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102057715.png"></p><p>发现一个邮箱</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102057389.png"></p><p>扫描出一个登录页面</p><p>发现有修改密码功能</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102058733.png"></p><p>根据<a href="mailto:&#49;&#49;&#x35;&#54;&#54;&#x33;&#x31;&#x39;&#x36;&#49;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#x6d;">&#49;&#49;&#x35;&#54;&#54;&#x33;&#x31;&#x39;&#x36;&#49;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#x6d;</a>找到答案为 西安</p><p>重置密码进行登录即可</p><h3 id="16-探针泄露"><a href="#16-探针泄露" class="headerlink" title="16.探针泄露"></a>16.探针泄露</h3><p>有的网站搭建时可能在<a href="https://so.csdn.net/so/search?q=%E6%A0%B9%E7%9B%AE%E5%BD%95&spm=1001.2101.3001.7020">根目录</a>下留下探针</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102058329.png"></p><p>得知页面为php 访问PHP探针url&#x2F;tz.php</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102058223.png"></p><p>点击phpinfo，即可找到flag</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102058092.png"></p><h3 id="17-CDN穿透"><a href="#17-CDN穿透" class="headerlink" title="17.CDN穿透"></a>17.CDN穿透</h3><p>根据hint提示，直接ping <a href="http://www.ctfshow.com得到IP地址111.231.70.44">www.ctfshow.com得到IP地址111.231.70.44</a></p><h3 id="18-js敏感信息泄露"><a href="#18-js敏感信息泄露" class="headerlink" title="18.js敏感信息泄露"></a>18.js敏感信息泄露</h3><p>查看源码</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102058583.png"></p><p>点击进入js文件</p><p>发现当分数大于100时</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102059248.png"></p><p>进行解码之后</p><p>在线解码<a href="https://tool.chinaz.com/tools/urlencode.aspx">https://tool.chinaz.com/tools/urlencode.aspx</a></p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102059305.png"></p><p>访问110.php得到flag</p><h3 id="19-前端密钥泄露"><a href="#19-前端密钥泄露" class="headerlink" title="19.前端密钥泄露"></a>19.前端密钥泄露</h3><p>右键查看源码发现</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102059332.png"></p><p>但是输入登录一直提示密码错误</p><p>抓个包看看怎么回事</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102059750.png"></p><p>奇奇怪怪抓包就行</p><h3 id="20-数据库恶意下载"><a href="#20-数据库恶意下载" class="headerlink" title="20.数据库恶意下载"></a>20.数据库恶意下载</h3><p>mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了。</p><p>早期asp+access架构的数据库文件为db.mdb，直接查看url路径添加加&#x2F;db&#x2F;db.mdb下载文件，用记事本打开搜索flag即可。</p><hr><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102059011.png"></p><p>到此结束</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 信息泄露 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burpsuite靶场xss</title>
      <link href="/2022/11/10/burpsuite%E9%9D%B6%E5%9C%BAxss/"/>
      <url>/2022/11/10/burpsuite%E9%9D%B6%E5%9C%BAxss/</url>
      
        <content type="html"><![CDATA[<h2 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h2><h3 id="1-encodeURIComponent"><a href="#1-encodeURIComponent" class="headerlink" title="1.encodeURIComponent"></a>1.<code>encodeURIComponent</code></h3><p>转义除了如下所示外的所有字符：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns">不转义的字符：<br>    <span class="hljs-keyword">A</span>-Z a-z <span class="hljs-number">0</span>-<span class="hljs-number">9</span> - _ . ! ~ * &#x27; ( )<br></code></pre></td></tr></table></figure><h2 id="学徒级别"><a href="#学徒级别" class="headerlink" title="学徒级别"></a>学徒级别</h2><h3 id="1-将-XSS-反射到-HTML-上下文中"><a href="#1-将-XSS-反射到-HTML-上下文中" class="headerlink" title="1.将 XSS 反射到 HTML 上下文中"></a>1.<a href="https://portswigger.net/web-security/cross-site-scripting/reflected/lab-html-context-nothing-encoded">将 XSS 反射到 HTML 上下文中</a></h3><p>漏洞点：搜索栏</p><p>payload</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<span class="hljs-title function_">alert</span>(<span class="hljs-number">1</span>)&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="2-将-XSS-反射到-HTML-上下文中"><a href="#2-将-XSS-反射到-HTML-上下文中" class="headerlink" title="2.将 XSS 反射到 HTML 上下文中"></a>2.将 XSS 反射到 HTML 上下文中</h3><p>漏洞点：文章评论区</p><p>payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<span class="hljs-title function_">alert</span>(<span class="hljs-number">1</span>)&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="3-使用源的接收器中的-DOM-XSS"><a href="#3-使用源的接收器中的-DOM-XSS" class="headerlink" title="3.使用源的接收器中的 DOM XSS"></a>3.<a href="https://portswigger.net/web-security/cross-site-scripting/dom-based/lab-document-write-sink">使用源的接收器中的 DOM XSS</a></h3><p>漏洞点：搜索栏</p><p>f12打开源代码</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102047131.png"></p><p>使用搜所功能之后发发现dom 接口</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102047541.png"></p><p>点击发现代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">document.write(&#x27;<span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/resources/images/tracker.gif?searchTerms=&#x27;+query+&#x27;&quot;</span>&gt;</span>&#x27;)<br></code></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&#x27;&quot;&gt;<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="4-使用源在接收器中输入-DOM-XSS"><a href="#4-使用源在接收器中输入-DOM-XSS" class="headerlink" title="4.使用源在接收器中输入 DOM XSS"></a>4.使用源在接收器中输入 DOM XSS</h3><p>描述：搜索博客功能中包含一个<a href="https://portswigger.net/web-security/cross-site-scripting/dom-based">基于 DOM 的跨站点脚本</a>执行漏洞。它使用赋值，该赋值使用 来自 的数据更改元素的 HTML 内容。</p><p>dom使用了赋值形</p><p>查看源代码</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102047677.png"></p><p>思路：属性的值</p><p>无效并引发错误。这将触发事件处理程序，然后事件处理程序调用该函数。因此，每当用户的浏览器尝试加载包含恶意帖子的页面时，都会执行有效负载。</p><p>payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">1</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(1)</span>&gt;</span><br></code></pre></td></tr></table></figure><p>src的值不正确触发事件 onerror</p><p>同理 事件型payload还有</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">1</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">alert(1)</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="5-使用源的-jQuery-锚点属性接收器中的-DOM-XSS"><a href="#5-使用源的-jQuery-锚点属性接收器中的-DOM-XSS" class="headerlink" title="5.使用源的 jQuery 锚点属性接收器中的 DOM XSS"></a>5.使用源的 jQuery 锚点属性接收器中的 DOM XSS</h3><p>描述：在提交反馈页中包含一个<a href="https://portswigger.net/web-security/cross-site-scripting/dom-based">基于 DOM 的跨站点脚本</a>漏洞。它使用 jQuery 库的选择器函数来查找锚点元素，并使用 来自 的数据更改其属性。<code>$``href``location.search</code></p><p>要解决此练习，请发出“后退”链接警报。<code>document.cookie</code></p><p>思路：</p><p>根据描述先找到相关代码</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102048335.png"></p><p>前端对应代码为</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102050966.png"></p><p>因此猜测为</p><p>输入的payload当做herf的值 尝试构造payload</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-number">123</span>&quot; onclick=&quot;alert(document<span class="hljs-selector-class">.cookie</span>)&quot;<br></code></pre></td></tr></table></figure><p>发现无法闭合href属性</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102050993.png"></p><p>使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">javascript</span>:<span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span>)<br></code></pre></td></tr></table></figure><p>输入之后进入href的值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">href=<span class="hljs-string">&quot;javascript:alert(document.cookie)&quot;</span><br></code></pre></td></tr></table></figure><p>单击即可触发</p><h3 id="6-使用哈希更改事件在-jQuery-选择器接收器中-SINK-中的-DOM-XSS"><a href="#6-使用哈希更改事件在-jQuery-选择器接收器中-SINK-中的-DOM-XSS" class="headerlink" title="6.使用哈希更改事件在 jQuery 选择器接收器中 SINK 中的 DOM XSS"></a>6.使用哈希更改事件在 jQuery 选择器接收器中 SINK 中的 DOM XSS</h3><p>描述：此实验室主页上包含一个<a href="https://portswigger.net/web-security/cross-site-scripting/dom-based">基于 DOM 的跨站点脚本</a>漏洞。它使用jQuery的选择器函数自动滚动到给定的帖子，其标题通过属性传递。<code>$()``location.hash</code></p><p>要解决实验室问题，请向受害者提供在其浏览器中调用该函数的攻击。<code>print()</code></p><h3 id="7-将-XSS-反射到带有尖括号-HTML-编码的属性中"><a href="#7-将-XSS-反射到带有尖括号-HTML-编码的属性中" class="headerlink" title="7.将 XSS 反射到带有尖括号 HTML 编码的属性中"></a>7.将 XSS 反射到带有尖括号 HTML 编码的属性中</h3><p>描述：此实验室在搜索博客功能中包含一个<a href="https://portswigger.net/web-security/cross-site-scripting/reflected">反映的跨站点脚本</a>漏洞，其中尖括号是 HTML 编码的。若要解决此实验室问题，请执行跨站点脚本攻击，该攻击会注入属性并调用函数。<code>alert</code></p><p>漏洞点在搜索框中</p><p>输入xss进行搜索</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102051279.png"></p><p>发现输入的值作为了value属性的值，构造payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&quot;&gt;<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>发现</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102051107.png"></p><p>集合描述，是尖括号被转义，因此改用事件型触发</p><p>payload</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-string">&quot;onmouseover=&quot;</span><span class="hljs-title function_">alert</span>(<span class="hljs-number">1</span>)<br><span class="hljs-comment">//onmouseover 事件发生在鼠标指针移动到元素或它的子元素上时</span><br></code></pre></td></tr></table></figure><h3 id="8-将-XSS-存储到带有双引号-HTML-编码的锚点属性中href"><a href="#8-将-XSS-存储到带有双引号-HTML-编码的锚点属性中href" class="headerlink" title="8.将 XSS 存储到带有双引号 HTML 编码的锚点属性中href"></a>8.将 XSS 存储到带有双引号 HTML 编码的锚点属性中<code>href</code></h3><p>描述：此实验室在注释功能中包含一个<a href="https://portswigger.net/web-security/cross-site-scripting/stored">存储的跨站点脚本</a>漏洞。若要解决此实验问题，请提交一个注释，该注释在单击注释作者姓名时调用该函数。<code>alert</code></p><p>思路：根据描述，漏洞点在文章评论区，而且双引号会被过滤 </p><p>解决：</p><p>一开始我以为是对Name的值进行xss，其实是对Website，Website设计的作用添加个人博客地址，游客可以点击评论者姓名即可跳转到评论者的博客地址</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102051327.png"></p><p>随即便发现了漏洞点</p><p>根据描述双引号会被转义 没有双引号闭合不了herf事件 尖括号无论是否被转义都无法使用</p><p>采用js伪协议</p><p>payload</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">javascript</span>:<span class="hljs-title function_">alert</span>(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h3 id="9-将-XSS-反射到带有尖括号-HTML-编码的-JavaScript-字符串中"><a href="#9-将-XSS-反射到带有尖括号-HTML-编码的-JavaScript-字符串中" class="headerlink" title="9.将 XSS 反射到带有尖括号 HTML 编码的 JavaScript 字符串中"></a>9.将 XSS 反射到带有尖括号 HTML 编码的 JavaScript 字符串中</h3><p>描述：此实验室在对尖括号进行编码的搜索查询跟踪功能中包含一个<a href="https://portswigger.net/web-security/cross-site-scripting/reflected">反映的跨站点脚本</a>漏洞。反射发生在 JavaScript 字符串内部。要解决此实验，请执行跨站点脚本攻击，该攻击会中断 JavaScript 字符串并调用该函数。<code>alert</code></p><p>思路：根据描述是在搜索框有xss，找到了对应代码</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102051877.png"></p><p>发现搜索框输入的东西会被encodeURIComponent函数编码</p><p>解决</p><p>可以通过单引号提前结束</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> burpsuite靶场 </tag>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burpsuite靶场逻辑漏洞</title>
      <link href="/2022/11/10/burpsuite%E9%9D%B6%E5%9C%BA%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
      <url>/2022/11/10/burpsuite%E9%9D%B6%E5%9C%BA%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102158492.png"></p><p>靶场地址 <a href="https://portswigger.net/web-security/all-labs">All labs | Web Security Academy (portswigger.net)</a></p><p>说明：靶场的每一题都不会漏，关卡名字都是浏览器直译。可以不看名字直接数第几关，都是按顺序写的</p><h3 id="1-对客户端控件的过度信任"><a href="#1-对客户端控件的过度信任" class="headerlink" title="1.对客户端控件的过度信任"></a>1.对客户端控件的过度信任</h3><p>描述：此实验室未充分验证用户输入。您可以利用其采购工作流程中的逻辑缺陷以意外价格购买商品。要解决实验室问题，请购买“轻巧的l33t皮夹克”。</p><p>您可以使用以下凭据登录自己的帐户：<code>wiener:peter</code></p><p>思考：根据描述应该是修改价格的支付漏洞</p><p>一般修改价格的支付漏洞有几个点</p><p>1.商品添加到购物车时</p><p>2.生成订单时</p><p>3.由订单生成付款时</p><p>解决;</p><p>登录（账号）wiener  （密码）peter 之后</p><p>进入要求修改价格的夹克衫</p><p>点击添加到购物车时抓包</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102053105.png"></p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102053678.png"></p><p>发现带有价格的数据包</p><p>修改价格为1之后放包</p><p>进入购物车即可成功下单</p><h3 id="2-高级逻辑漏洞"><a href="#2-高级逻辑漏洞" class="headerlink" title="2.高级逻辑漏洞"></a>2.高级逻辑漏洞</h3><p>描述：此实验室未充分验证用户输入。您可以利用其采购工作流程中的逻辑缺陷以意外价格购买商品。要解决实验室问题，请购买“轻巧的l33t皮夹克”。</p><p>您可以使用以下凭据登录自己的帐户：<code>wiener:peter</code></p><p>依然是支付漏洞</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102053940.png"></p><p>但是在添加到购物车里的时候已经没有价格参数</p><p>那就从数量参数上入手</p><p>尝试添加 0.1 等数量的产品 但是页面出现报错</p><p>那么就添加负数 发现成功添加</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102053275.png"></p><p>点击结账发现提示说 付款总价不能低于0</p><p>因此添加其他商品将金额大于0 即可</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102053881.png"></p><p>成功购买之后发现漏洞还未解决</p><p>反过来添加正常价格的夹克衫，添加其他商品的负数即可</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102054741.png"></p><h3 id="3-安全控制不一致"><a href="#3-安全控制不一致" class="headerlink" title="3.安全控制不一致"></a>3.安全控制不一致</h3><p>描述：</p><p>此实验室有缺陷的逻辑允许任意用户访问应仅对公司员工可用的管理功能。要解决实验室问题，请访问管理面板并删除 Carlos。</p><p>首先要找到管理面板</p><p>本打算扫描一下后台，蒙了一个&#x2F;admin 发现对了</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102054873.png"></p><p>发现需要用户DontWannaCry才可以访问管理面板</p><p>进入到注册页面</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102135933.png"></p><p>根据提示我们使用<a href="mailto:&#x61;&#110;&#121;&#x74;&#x68;&#x69;&#110;&#x67;&#x40;&#121;&#x6f;&#x75;&#x72;&#45;&#x65;&#109;&#97;&#x69;&#108;&#45;&#105;&#100;&#x2e;&#119;&#x65;&#98;&#45;&#115;&#101;&#99;&#117;&#x72;&#x69;&#x74;&#x79;&#x2d;&#x61;&#99;&#97;&#100;&#x65;&#109;&#121;&#x2e;&#110;&#x65;&#116;">&#x61;&#110;&#121;&#x74;&#x68;&#x69;&#110;&#x67;&#x40;&#121;&#x6f;&#x75;&#x72;&#45;&#x65;&#109;&#97;&#x69;&#108;&#45;&#105;&#100;&#x2e;&#119;&#x65;&#98;&#45;&#115;&#101;&#99;&#117;&#x72;&#x69;&#x74;&#x79;&#x2d;&#x61;&#99;&#97;&#100;&#x65;&#109;&#121;&#x2e;&#110;&#x65;&#116;</a>格式的邮箱进行注册</p><p>点击 email client</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102140800.png"></p><p>根据他提供的邮箱进行注册</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102140794.png"></p><p>尝试进行注册</p><p>成功注册并且登录</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102147548.png"></p><p>然后将你的邮箱改为 <a href="mailto:&#120;&#x78;&#120;&#x40;&#100;&#x6f;&#110;&#116;&#119;&#97;&#x6e;&#x6e;&#97;&#x63;&#x72;&#x79;&#46;&#x63;&#111;&#x6d;">&#120;&#x78;&#120;&#x40;&#100;&#x6f;&#110;&#116;&#119;&#97;&#x6e;&#x6e;&#97;&#x63;&#x72;&#x79;&#46;&#x63;&#111;&#x6d;</a></p><p>即可访问admin页面</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102148126.png"></p><p>删除carlos完成靶场</p><p>根据说明，这一关的网站是该公司的内部账号及 <a href="mailto:&#120;&#120;&#x78;&#x40;&#100;&#111;&#x6e;&#x74;&#119;&#x61;&#110;&#x6e;&#97;&#99;&#114;&#121;&#46;&#99;&#x6f;&#x6d;">&#120;&#120;&#x78;&#x40;&#100;&#111;&#x6e;&#x74;&#119;&#x61;&#110;&#x6e;&#97;&#99;&#114;&#121;&#46;&#99;&#x6f;&#x6d;</a>格式的邮箱进行验证，邮箱为改格式就有权访问admin页面。</p><p>漏洞点：网站对邮箱更改验证不合格</p><h3 id="4-有缺陷的业务规则执行"><a href="#4-有缺陷的业务规则执行" class="headerlink" title="4.有缺陷的业务规则执行"></a>4.有缺陷的业务规则执行</h3><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102204950.png"></p><p>概括就是交替使用优惠卷，打骨折</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102206588.png"></p><p>钱包还剩100刀了</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102208634.png"></p><p>找到第一个优惠卷</p><p>下拉</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102209972.png"></p><p>底部有一个填邮箱的框，随便填一个得到第二个优惠卷</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102209010.png"></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-symbol">NEWCUST5</span><br>SIG<span class="hljs-symbol">NUP30</span><br></code></pre></td></tr></table></figure><p>接下来把最贵的商品加到购物车</p><p>跳到结算页面</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102212892.png"></p><p>交替使用优惠卷可以重复打折</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102214121.png"></p><p>购买成功即为完成实验</p><h3 id="5-低级逻辑缺陷"><a href="#5-低级逻辑缺陷" class="headerlink" title="5.低级逻辑缺陷"></a>5.低级逻辑缺陷</h3><p>根据提示，把皮夹克下单之后余额不足订单被拒绝</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102333917.png"></p><p>打开</p><p>http history 找到 POST &#x2F;cart</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102335433.png"></p><p>发包到 intruder</p><p>准备进行测试 quantity的值改为99 quantity&#x3D;99</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102341291.png"></p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102344329.png"></p><p>进行爆破</p><p>爆破一段时间之后查看购物车发现</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211102347004.png"></p><p>金额太过于庞大，反而成了负数，价格已超过后端编程语言中整数允许的最大值 因此，该值已循环回可能的最小值 </p><p>这时候挑另一件商品进行相同的操作，然后把价格加的正数且低于100.然后下单即可完成</p><p>由于后台限制每次只能添加99，爆破过程有点久，而且价格也不好把控，可以直接照抄份数</p><p><img src="https://blog-imgs-1307281339.cos.ap-guangzhou.myqcloud.com/blog-imgs/202211110008182.png"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> burpsuite靶场 </tag>
            
            <tag> 逻辑漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
